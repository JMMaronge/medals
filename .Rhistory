?make.score.img
?get.model.fit
fit<-get.model.fit(scores,path.mask,path.y,c("01",02))
fit
?make.pred.img
pred<-make.pred.img(scores,path.mask,fit,c("01","02"))
fit<-get.model.fit(scores,path.mask,path.y,c("01","02"))
pred<-make.pred.img(scores,path.mask,fit,c("01","02"))
library(fslr)
ortho2(pred[[1]])
strip.model = function(model){
model$y = c()
model$model = c()
model$residuals = c()
model$fitted.values = c()
model$effects = c()
model$qr$qr = c()
model$linear.predictors = c()
model$weights = c()
model$prior.weights = c()
model$data = c()
attr(model$terms,".Environment") = c()
attr(model$formula,".Environment") = c()
model
}
fit2<-strip.model(fit)
pred<-make.pred.img(scores,path.mask,fit2,c("01","02"))
fit2
library(medals)
def.fit
?fitted
?glmax
?glm
fit$terms
?get.model.fit
library(devtools)
install_github("jmmaronge/medals")
library(medals)
library(medals)
?predict
def.fit.2
summary(def.fit.2)
def.fit.2
?fitted
fit(def.fit.2)
?glm
def.fit.2$coefficients
def.fit.2$deviance
def.fit.2$rank
def.fit.2$aic
def.fit.2$residuals
install_github("jmmaronge/medals")
library(devtools)
install_github("jmmaronge/medals")
library(medals)
library(medals)
?get.model.fit
strip.model = function(model){
model$y = c()
model$model = c()
model$residuals = c()
model$fitted.values = c()
model$effects = c()
model$qr$qr = c()
model$linear.predictors = c()
model$weights = c()
model$prior.weights = c()
model$data = c()
attr(model$terms,".Environment") = c()
attr(model$formula,".Environment") = c()
model
}
install_github("jmmaronge/medals")
library(devtools)
install_github("jmmaronge/medals")
library(medals)
library(medals)
setwd("~/Documents/NeuroImaging/Segmentation/ISLES/Lesion_Intensity/medals/")
library("devtools")
document()
document()
setwd("~/Documents/NeuroImaging/Segmentation/ISLES/Lesion_Intensity/medals/")
document()
document()
install_github("jmmaronge/medals")
library(medals)
setwd("~/Documents/NeuroImaging/Segmentation/ISLES/Lesion_Intensity/medals/")
document()
library("devtools")
document()
library(medals)
build_vignette()
build_vignettes()
build_vignettes("medals")
build_vignettes()
build_vignettes("~/Documents/NeuroImaging/Segmentation/ISLES/Lesion_Intensity/medals/medals.Rproj")
build_vignettes("~/Documents/NeuroImaging/Segmentation/ISLES/Lesion_Intensity/medals/")
build_vignettes()
library(medals)
dir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
image.file[[i]][[1]]<-paste0(dir,"flairTrimmedNormImg_Subject",subj[i],".nii.gz")
image.file[[i]][[2]]<-paste0(dir,"t1TrimmedNormImg_Subject",subj[i],".nii.gz")
image.file[[i]][[3]]<-paste0(dir,"t2TrimmedNormImg_Subject",subj[i],".nii.gz")
image.file[[i]][[4]]<-paste0(dir,"dwiTrimmedNormImg_Subject",subj[i],".nii.gz")
mask.file[[i]]<-paste0(dir,"brainmask_Subject",subj[i],".nii.gz")
y.file[[i]]<-paste0(dir,"ymask_Subject",subj[i],".nii.gz")
}
library(medals)
datadir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"t1TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
library(medals)
datadir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"t1TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
print(image.file)
library(medals)
suff<-imaging.suff.stat(path.img.list = image.file,
path.mask.list = mask.file,
mpower = 2 #### denotes highest order moment wanted
)
image.file
library(medals)
datadir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
suff<-imaging.suff.stat(path.img.list = image.file,
path.mask.list = mask.file,
mpower = 2 #### denotes highest order moment wanted
)
library(medals)
datadir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
suff<-imaging.suff.stat(path.img.list = image.file,
path.mask.list = mask.file,
mpower = 2 #### denotes highest order moment wanted
)
suff
length(suff)
names(suff)
suff$mean
cp <- imaging.cp.mat(mean.vec = suff$mean,
sd.vec = suff$sd,
n.vec = suff$n,
cp.list = suff$cp.mats
)
cp
load <- get.loadings(cp)
load
dim(load)
dim(cp)
scores <- make.score.img(
path.img.list = image.file,
path.mask.list = mask.file,
loads = load,
which.scores = 1:8
)
library(medals)
?eval
.GlobalEnv
.GlobalEnv()
library(medals)
datadir<-"~/Desktop/images_ISLES2015/training/"
subj<-c("05","06")
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
library(medals)
suff <- imaging.suff.stat(
path.img.list = image.file,
path.mask.list = mask.file,
mpower = 2 #### denotes highest order moment wanted
)
gc()
cp
cp <- imaging.cp.mat(mean.vec = suff$mean,
sd.vec = suff$sd,
n.vec = suff$n,
cp.list = suff$cp.mats
)
dim(cp)
pc.var(cp,suff$total.n)$var[1:10]
pc.var(cp,suff$total.n)$cum_pct[[2]][1:10]
pc.var(cp,suff$total.n)$cum_pct
pc.var(cp,suff$total.n)$cum_pct[1:10]
pc.var(cp,suff$total.n)$var[1:8]
pc.var(cp,suff$total.n)$cum_pct[1:8]
loadings <- get.loadings(cp)
scores <- make.score.img(
path.img.list = image.file,
path.mask.list = mask.file,
loads = loadings,
which.scores = 1:8
)
loadigns
loadings
mask.file
file.exists(unlist(mask.file))
library(medals)
scores <- make.score.img(
path.img.list = image.file,
path.mask.list = mask.file,
loads = loadings,
which.scores = 1:8
)
library(fslr)
ortho2(scores[[1]][[2]]) # gives you the score image of the 1st subject, 2nd PC
fit1<-get.model.fit(score.img.list = scores,
path.mask.list = mask.file,
path.y.list = y.file,
subj.id = subj
)
scores
mask.file
y.file
sub
subj
score.img.list = scores
path.mask.list = mask.file
path.y.list = y.file
subj.id = subj
df.list <- vector(mode = "list", length = length(path.mask.list))
length(score.img.list[[1]])
library(dplyr)
?bind_rows()
scores
fit1 <- get.model.fit(score.img.list = scores,
path.mask.list = mask.file,
path.y.list = y.file,
subj.id = subj
)
fit1 <- get.model.fit(score.img.list = scores,
path.mask.list = mask.file,
path.y.list = y.file,
subj.id = subj,
verbose = TRUE
)
?glm
?glm.control
fit1 <- get.model.fit(score.img.list = scores,
path.mask.list = mask.file,
path.y.list = y.file,
# subj.id = subj,
verbose = TRUE
)
?bind_rows
def.fit
?predict
library(medals)
subj <- c("05","06")
datadir <- "~/Desktop/images_ISLES2015/training/"
image.file<-vector(length = length(subj), mode = "list")
mask.file<-vector(length = length(subj), mode = "list")
y.file<-vector(length = length(subj), mode = "list")
for(i in 1:length(subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"TrimmedNormImg_Subject",
subj[i], ".nii.gz"))
image.file[[i]][[1]] <- imgs[1]
image.file[[i]][[2]] <- imgs[2]
image.file[[i]][[3]] <- imgs[3]
image.file[[i]][[4]] <- imgs[4]
mask.file[[i]] <- file.path(datadir, paste0("brainmask_Subject", subj[i], ".nii.gz"))
y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
print(image.file)
print(mask.file)
print(y.file)
print(subj)
cp <- imaging.cp.mat(mean.vec = suff$mean,
sd.vec = suff$sd,
n.vec = suff$n,
cp.list = suff$cp.mats
)
library(medals)
suff <- imaging.suff.stat(
path.img.list = image.file,
path.mask.list = mask.file,
mpower = 2 #### denotes highest order moment wanted
)
cp <- imaging.cp.mat(mean.vec = suff$mean,
sd.vec = suff$sd,
n.vec = suff$n,
cp.list = suff$cp.mats
)
dim(cp)
pc.var(cp,suff$total.n)$var[1:8]
pc.var(cp,suff$total.n)$cum_pct[1:8]
loadings <- get.loadings(cp)
scores <- make.score.img(
path.img.list = image.file,
path.mask.list = mask.file,
loads = loadings,
which.scores = 1:8
)
def.loads
dim(def.loads)
?predict.prcomp
predict.prcomp
stats:::predict.prcomp
library(medals)
loadings <- get.loadings(cp)
loadings
scores <- make.score.img(
path.img.list = image.file,
path.mask.list = mask.file,
loads = loadings,
which.scores = 1:8
)
library(fslr)
ortho2(scores[[1]][[2]]) # gives you the score image of the 1st subject, 2nd PC
fit1 <- get.model.fit(
score.img.list = scores,
path.mask.list = mask.file,
path.y.list = y.file,
# subj.id = subj,
verbose = TRUE
)
preds <- make.pred.img(
score.img.list = scores,
path.mask.list = mask.file,
fit = fit1,
# subj.id = subj
verbose = TRUE
)
ortho2(preds[[1]]) #prediction image for the first subject
ortho2(image.file[[1]][[1]], preds[[1]] > 0.5) #prediction image for the first subject
test.subj<-c("08")
test.image.file<-vector(length = length(test.subj), mode = "list")
test.mask.file<-vector(length = length(test.subj), mode = "list")
for(i in 1:length(test.subj)){
test.image.file[[i]][[1]]<-paste0(dir,"flairTrimmedNormImg_Subject",test.subj[i],".nii.gz")
test.image.file[[i]][[2]]<-paste0(dir,"t1TrimmedNormImg_Subject",test.subj[i],".nii.gz")
test.image.file[[i]][[3]]<-paste0(dir,"t2TrimmedNormImg_Subject",test.subj[i],".nii.gz")
test.image.file[[i]][[4]]<-paste0(dir,"dwiTrimmedNormImg_Subject",test.subj[i],".nii.gz")
test.mask.file[[i]]<-paste0(dir,"brainmask_Subject",test.subj[i],".nii.gz")
}
dir
test.subj<-c("08")
test.image.file<-vector(length = length(test.subj), mode = "list")
test.mask.file<-vector(length = length(test.subj), mode = "list")
test.y.file<-vector(length = length(test.subj), mode = "list")
for(i in 1:length(test.subj)){
imgs = file.path(datadir,
paste0(c("flair", "t1", "t2", "dwi"),
"TrimmedNormImg_Subject",
test.subj[i], ".nii.gz"))
test.image.file[[i]][[1]] <- imgs[1]
test.image.file[[i]][[2]] <- imgs[2]
test.image.file[[i]][[3]] <- imgs[3]
test.image.file[[i]][[4]] <- imgs[4]
test.mask.file[[i]] <- file.path(datadir,
paste0("brainmask_Subject", subj[i], ".nii.gz"))
test.y.file[[i]] <- file.path(datadir,
paste0("ymask_Subject", subj[i], ".nii.gz")
)
}
print(test.image.file)
print(test.mask.file)
print(test.subj)
test.scores <-
scores <- make.score.img(
path.img.list = test.image.file,
path.mask.list = test.mask.file,
loads = loadings,  #training loadings matrix
which.scores = 1:8  #make sure this is the same as what your training set used
)
test.preds <- preds <- make.pred.img(
score.img.list = test.scores,
path.mask.list = test.mask.file,
fit = fit1, # training fit
# subj.id = subj
verbose = TRUE
)
ortho2(test.preds[[1]]) #prediction image for the first subject
ortho2(test.image.file[[1]][[1]], test.preds[[1]] > 0.5) #binary prediction
test.image.file[[1]][[1]]
test.preds[[1]]
img = readnii(test.image.file[[1]][[1]])
img
readnii(test.image.file[[1]][[2]])
mask = readnii(test.mask.file[[1]])
mask
y_img = readnii(test.y.file[[1]])
y_img
y_img = readnii(test.y.file[[1]]) # 230x230x154
double_ortho(y_img, test.preds[[1]] > 0.5) #binary prediction
double_ortho(y_img, test.preds[[1]] > 0.5, NA.x = TRUE) #binary prediction
double_ortho(y_img, test.preds[[1]] > 0.5, NA.x = TRUE, NA.y = TRUE) #binary prediction
double_ortho(y_img, test.preds[[1]] > 0.5,
NA.x = TRUE,
NA.y = TRUE,
col.x = "white",
col.y = "white") #binary prediction
sum(y_img)
?double_ortho
double_ortho()
double_ortho
sum(y_img)
double_ortho(y_img, test.preds[[1]] > 0.5,
NA.x = TRUE,
NA.y = TRUE,
xyz = xyz(y_img),
col.x = "white",
col.y = "white") #binary prediction
y_img
cal.max(y_img)
cal.min(y_img)
ortho2(y_img)
ortho2
ortho2a?
?ortho2
double_ortho(x = y_img, y = test.preds[[1]] > 0.5,
NA.x = TRUE,
NA.y = TRUE,
xyz = xyz(y_img),
col = "white",
col.y = "white") #binary prediction
double_ortho(x = y_img, y = test.preds[[1]] > 0.5,
NA.x = TRUE,
NA.y = TRUE,
xyz = xyz(y_img),
col = "white",
col.y = "white") #binary prediction
library(medals)
